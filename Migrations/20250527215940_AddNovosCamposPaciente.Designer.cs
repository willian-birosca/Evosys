// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Evosys.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250527215940_AddNovosCamposPaciente")]
    partial class AddNovosCamposPaciente
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EvolucaoPorPaciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CpfPaciente")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CpfProfissional")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("DataEvolucao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Intervencao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Setor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Sintomas")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CpfPaciente");

                    b.HasIndex("CpfProfissional");

                    b.ToTable("EvolucoesPorPaciente");
                });

            modelBuilder.Entity("Paciente", b =>
                {
                    b.Property<string>("Cpf")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("DataAdmissao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataAlta")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Gravidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Cpf");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("ProfissionalDeSaude", b =>
                {
                    b.Property<string>("Cpf")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<int>("NivelPermissao")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Situacao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Cpf");

                    b.ToTable("ProfissionaisDeSaude");
                });

            modelBuilder.Entity("EvolucaoPorPaciente", b =>
                {
                    b.HasOne("Paciente", "Paciente")
                        .WithMany("Evolucoes")
                        .HasForeignKey("CpfPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProfissionalDeSaude", "ProfissionalDeSaude")
                        .WithMany()
                        .HasForeignKey("CpfProfissional")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");

                    b.Navigation("ProfissionalDeSaude");
                });

            modelBuilder.Entity("Paciente", b =>
                {
                    b.Navigation("Evolucoes");
                });
#pragma warning restore 612, 618
        }
    }
}
